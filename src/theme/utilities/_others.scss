@use '../variables/breakpoints' as T;

// caption-side

$caption-sides: (top, bottom);

@each $side in $caption-sides {
  .caption-#{$side} {
    caption-side: $side;
  }

  @each $breakpoint, $_ in T.$breakpoints {
    .#{$breakpoint}:caption-#{$side} {
      caption-side: $side;
    }
  }
}

// appearance

.appearance-none {
  appearance: none;
}

@each $breakpoint, $_ in T.$breakpoints {
  .#{$breakpoint}:appearance-none {
    appearance: none;
  }
}

// resize

$resize-values: (
  none: none,
  y: vertical,
  x: horizontal
);

.resize {
  resize: both;
}

@each $breakpoint, $_ in T.$breakpoints {
  .#{$breakpoint}:resize {
    resize: both;
  }
}

@each $name, $value in $resize-values {
  .resize-#{$name} {
    resize: $value;
  }

  @each $breakpoint, $_ in T.$breakpoints {
    .#{$breakpoint}:resize-#{$name} {
      resize: $value;
    }
  }
}

// aspect-ratio

$aspect-ratios: (
  square: 1 / 1,
  video: 16 / 9
);

@each $name, $ratio in $aspect-ratios {
  .aspect-#{$name} {
    aspect-ratio: $ratio;
  }

  @each $breakpoint, $_ in T.$breakpoints {
    .#{$breakpoint}:aspect-#{$name} {
      aspect-ratio: $ratio;
    }
  }
}

// position

$positions: (static, fixed, absolute, relative, sticky);

@each $name, $_ in $positions {
  .#{$name} {
    position: $name;
  }

  @each $breakpoint, $_ in T.$breakpoints {
    .#{$breakpoint}:#{$name} {
      position: $name;
    }
  }
}

// object-position

$object-positions: (
  bottom,
  center,
  left,
  left-bottom,
  left-top,
  right,
  right-bottom,
  right-top,
  top
);

@each $position in $object-positions {
  .object-#{$position} {
    object-position: $position;
  }

  @each $breakpoint, $_ in T.$breakpoints {
    .#{$breakpoint}:object-#{$position} {
      object-position: $position;
    }
  }
}
