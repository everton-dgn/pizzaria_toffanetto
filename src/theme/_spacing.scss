@use './variables/breakpoints' as T;
@use './variables/spacings' as spacings;

$spacings: (
  96: spacings.$spacing-96,
  60: spacings.$spacing-60,
  48: spacings.$spacing-48,
  40: spacings.$spacing-40,
  36: spacings.$spacing-36,
  32: spacings.$spacing-32,
  28: spacings.$spacing-28,
  24: spacings.$spacing-24,
  20: spacings.$spacing-20,
  16: spacings.$spacing-16,
  12: spacings.$spacing-12,
  8: spacings.$spacing-8,
  6: spacings.$spacing-6,
  4: spacings.$spacing-4,
  2: spacings.$spacing-2,
  1: spacings.$spacing-1,
  0: spacings.$spacing-0
);

$sides: (
  '': '',
  t: -top,
  r: -right,
  b: -bottom,
  l: -left
);

$axes: (
  x: (
    left,
    right
  ),
  y: (
    top,
    bottom
  )
);

@each $size, $value in $spacings {
  @each $prefix, $suffix in $sides {
    $propName: if($suffix == '', 'padding', 'padding#{$suffix}');
    .p#{$prefix}-#{$size} {
      #{$propName}: $value;
    }
    $propName: if($suffix == '', 'margin', 'margin#{$suffix}');
    .m#{$prefix}-#{$size} {
      #{$propName}: $value;
    }

    @each $breakpoint, $_ in T.$breakpoints {
      .#{$breakpoint}:p#{$prefix}-#{$size} {
        #{$propName}: $value;
      }
      .#{$breakpoint}:m#{$prefix}-#{$size} {
        #{$propName}: $value;
      }
    }
  }

  @each $axis, $dirs in $axes {
    @each $dir in $dirs {
      .p#{$axis}-#{$size} {
        padding-#{$dir}: $value;
      }
      .m#{$axis}-#{$size} {
        margin-#{$dir}: $value;
      }

      @each $breakpoint, $_ in T.$breakpoints {
        .#{$breakpoint}:p#{$axis}-#{$size} {
          padding-#{$dir}: $value;
        }
        .#{$breakpoint}:m#{$axis}-#{$size} {
          margin-#{$dir}: $value;
        }
      }
    }
  }

  .gap-#{$size} {
    gap: $value;
  }

  .gap-col-#{$size} {
    column-gap: $value;
  }

  .gap-row-#{$size} {
    row-gap: $value;
  }

  @each $breakpoint, $_ in T.$breakpoints {
    .#{$breakpoint}:gap-#{$size} {
      gap: $value;
    }
    .#{$breakpoint}:gap-col-#{$size} {
      column-gap: $value;
    }
    .#{$breakpoint}:gap-row-#{$size} {
      row-gap: $value;
    }
  }
}
